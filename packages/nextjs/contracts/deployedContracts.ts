/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    BasicCompliance: {
      address: "0x4278C5d322aB92F1D876Dd7Bd9b44d1748b88af2",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "previousAdminRole",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "newAdminRole",
              type: "bytes32",
            },
          ],
          name: "RoleAdminChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RoleGranted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RoleRevoked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "TokenBound",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "TokenUnbound",
          type: "event",
        },
        {
          inputs: [],
          name: "ADMIN_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DEFAULT_ADMIN_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "TOKEN_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "bindToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "canTransfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "created",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "destroyed",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
          ],
          name: "getRoleAdmin",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "grantRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "hasRole",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "isTokenBound",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "renounceRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "revokeRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "tokenBound",
          outputs: [
            {
              internalType: "contract IToken",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "transferred",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "unbindToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        bindToken: "contracts/compliance/interface/ICompliance.sol",
        canTransfer: "contracts/compliance/interface/ICompliance.sol",
        created: "contracts/compliance/interface/ICompliance.sol",
        destroyed: "contracts/compliance/interface/ICompliance.sol",
        isTokenBound: "contracts/compliance/interface/ICompliance.sol",
        transferred: "contracts/compliance/interface/ICompliance.sol",
        unbindToken: "contracts/compliance/interface/ICompliance.sol",
        DEFAULT_ADMIN_ROLE: "@openzeppelin/contracts/access/AccessControl.sol",
        getRoleAdmin: "@openzeppelin/contracts/access/AccessControl.sol",
        grantRole: "@openzeppelin/contracts/access/AccessControl.sol",
        hasRole: "@openzeppelin/contracts/access/AccessControl.sol",
        renounceRole: "@openzeppelin/contracts/access/AccessControl.sol",
        revokeRole: "@openzeppelin/contracts/access/AccessControl.sol",
        supportsInterface: "@openzeppelin/contracts/access/AccessControl.sol",
      },
    },
    ClaimIssuer: {
      address: "0xaD82Ecf79e232B0391C5479C7f632aA1EA701Ed1",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialManagementKey",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "Approved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "claimId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "topic",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "scheme",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "ClaimAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "claimId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "topic",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "scheme",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "ClaimChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "claimId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "topic",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "scheme",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "ClaimRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
          ],
          name: "ClaimRevoked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "Executed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "ExecutionFailed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "ExecutionRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "key",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "purpose",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "keyType",
              type: "uint256",
            },
          ],
          name: "KeyAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "key",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "purpose",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "keyType",
              type: "uint256",
            },
          ],
          name: "KeyRemoved",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_topic",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_scheme",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_issuer",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_signature",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
          ],
          name: "addClaim",
          outputs: [
            {
              internalType: "bytes32",
              name: "claimRequestId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_purpose",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_type",
              type: "uint256",
            },
          ],
          name: "addKey",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_id",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_approve",
              type: "bool",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
          ],
          name: "execute",
          outputs: [
            {
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_claimId",
              type: "bytes32",
            },
          ],
          name: "getClaim",
          outputs: [
            {
              internalType: "uint256",
              name: "topic",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "scheme",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_topic",
              type: "uint256",
            },
          ],
          name: "getClaimIdsByTopic",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "claimIds",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
          ],
          name: "getKey",
          outputs: [
            {
              internalType: "uint256[]",
              name: "purposes",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "keyType",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "key",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
          ],
          name: "getKeyPurposes",
          outputs: [
            {
              internalType: "uint256[]",
              name: "_purposes",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_purpose",
              type: "uint256",
            },
          ],
          name: "getKeysByPurpose",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "keys",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "sig",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "dataHash",
              type: "bytes32",
            },
          ],
          name: "getRecoveredAddress",
          outputs: [
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "initialManagementKey",
              type: "address",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "_sig",
              type: "bytes",
            },
          ],
          name: "isClaimRevoked",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "claimTopic",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "sig",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "isClaimValid",
          outputs: [
            {
              internalType: "bool",
              name: "claimValid",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_purpose",
              type: "uint256",
            },
          ],
          name: "keyHasPurpose",
          outputs: [
            {
              internalType: "bool",
              name: "result",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_claimId",
              type: "bytes32",
            },
          ],
          name: "removeClaim",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_purpose",
              type: "uint256",
            },
          ],
          name: "removeKey",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_claimId",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "_identity",
              type: "address",
            },
          ],
          name: "revokeClaim",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
          ],
          name: "revokeClaimBySignature",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "revokedClaims",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "version",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {
        addClaim: "@onchain-id/solidity/contracts/Identity.sol",
        addKey: "@onchain-id/solidity/contracts/Identity.sol",
        approve: "@onchain-id/solidity/contracts/Identity.sol",
        execute: "@onchain-id/solidity/contracts/Identity.sol",
        getClaim: "@onchain-id/solidity/contracts/Identity.sol",
        getClaimIdsByTopic: "@onchain-id/solidity/contracts/Identity.sol",
        getKey: "@onchain-id/solidity/contracts/Identity.sol",
        getKeyPurposes: "@onchain-id/solidity/contracts/Identity.sol",
        getKeysByPurpose: "@onchain-id/solidity/contracts/Identity.sol",
        isClaimRevoked:
          "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
        isClaimValid: "@onchain-id/solidity/contracts/Identity.sol",
        keyHasPurpose: "@onchain-id/solidity/contracts/Identity.sol",
        removeClaim: "@onchain-id/solidity/contracts/Identity.sol",
        removeKey: "@onchain-id/solidity/contracts/Identity.sol",
        revokeClaim:
          "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
        revokeClaimBySignature:
          "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
        getRecoveredAddress: "@onchain-id/solidity/contracts/Identity.sol",
        initialize: "@onchain-id/solidity/contracts/Identity.sol",
        version: "@onchain-id/solidity/contracts/Identity.sol",
      },
    },
    ClaimIssuersRegistry: {
      address: "0xb6057e08a11da09a998985874FE2119e98dB3D5D",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IClaimIssuer",
              name: "claimIssuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "claimTopics",
              type: "uint256[]",
            },
          ],
          name: "ClaimIssuerAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IClaimIssuer",
              name: "claimIssuer",
              type: "address",
            },
          ],
          name: "ClaimIssuerRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IClaimIssuer",
              name: "claimIssuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "claimTopics",
              type: "uint256[]",
            },
          ],
          name: "ClaimTopicsUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_claimIssuer",
              type: "address",
            },
            {
              internalType: "uint256[]",
              name: "_claimTopics",
              type: "uint256[]",
            },
          ],
          name: "addClaimIssuer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_claimIssuer",
              type: "address",
            },
          ],
          name: "getClaimIssuerClaimTopics",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getClaimIssuers",
          outputs: [
            {
              internalType: "contract IClaimIssuer[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "claimTopic",
              type: "uint256",
            },
          ],
          name: "getClaimIssuersForClaimTopic",
          outputs: [
            {
              internalType: "contract IClaimIssuer[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_issuer",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_claimTopic",
              type: "uint256",
            },
          ],
          name: "hasClaimTopic",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_issuer",
              type: "address",
            },
          ],
          name: "isClaimIssuer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_claimIssuer",
              type: "address",
            },
          ],
          name: "removeClaimIssuer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_claimIssuer",
              type: "address",
            },
            {
              internalType: "uint256[]",
              name: "_claimTopics",
              type: "uint256[]",
            },
          ],
          name: "updateIssuerClaimTopics",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        addClaimIssuer:
          "contracts/registry/interface/IClaimIssuersRegistry.sol",
        getClaimIssuerClaimTopics:
          "contracts/registry/interface/IClaimIssuersRegistry.sol",
        getClaimIssuers:
          "contracts/registry/interface/IClaimIssuersRegistry.sol",
        getClaimIssuersForClaimTopic:
          "contracts/registry/interface/IClaimIssuersRegistry.sol",
        hasClaimTopic: "contracts/registry/interface/IClaimIssuersRegistry.sol",
        isClaimIssuer: "contracts/registry/interface/IClaimIssuersRegistry.sol",
        removeClaimIssuer:
          "contracts/registry/interface/IClaimIssuersRegistry.sol",
        updateIssuerClaimTopics:
          "contracts/registry/interface/IClaimIssuersRegistry.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    ClaimTopicsRegistry: {
      address: "0x057cD3082EfED32d5C907801BF3628B27D88fD80",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "claimTopic",
              type: "uint256",
            },
          ],
          name: "ClaimTopicAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "claimTopic",
              type: "uint256",
            },
          ],
          name: "ClaimTopicRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_claimTopic",
              type: "uint256",
            },
          ],
          name: "addClaimTopic",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getClaimTopics",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_claimTopic",
              type: "uint256",
            },
          ],
          name: "removeClaimTopic",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        addClaimTopic: "contracts/registry/interface/IClaimTopicsRegistry.sol",
        getClaimTopics: "contracts/registry/interface/IClaimTopicsRegistry.sol",
        removeClaimTopic:
          "contracts/registry/interface/IClaimTopicsRegistry.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    IdentityRegistry: {
      address: "0x31403b1e52051883f2Ce1B1b4C89f36034e1221D",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IClaimIssuersRegistry",
              name: "_claimIssuersRegistry",
              type: "address",
            },
            {
              internalType: "contract IClaimTopicsRegistry",
              name: "_claimTopicsRegistry",
              type: "address",
            },
            {
              internalType: "contract IIdentityRegistryStorage",
              name: "_identityStorage",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IClaimIssuersRegistry",
              name: "claimIssuersRegistry",
              type: "address",
            },
          ],
          name: "ClaimIssuersRegistrySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IClaimTopicsRegistry",
              name: "claimTopicsRegistry",
              type: "address",
            },
          ],
          name: "ClaimTopicsRegistrySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint16",
              name: "country",
              type: "uint16",
            },
          ],
          name: "CountryUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "identity",
              type: "address",
            },
          ],
          name: "IdentityRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "identity",
              type: "address",
            },
          ],
          name: "IdentityRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IIdentityRegistryStorage",
              name: "identityStorage",
              type: "address",
            },
          ],
          name: "IdentityStorageSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "oldIdentity",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "newIdentity",
              type: "address",
            },
          ],
          name: "IdentityUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "previousAdminRole",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "newAdminRole",
              type: "bytes32",
            },
          ],
          name: "RoleAdminChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RoleGranted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RoleRevoked",
          type: "event",
        },
        {
          inputs: [],
          name: "AGENT_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DEFAULT_ADMIN_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "OWNER_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_userAddresses",
              type: "address[]",
            },
            {
              internalType: "contract IIdentity[]",
              name: "_identities",
              type: "address[]",
            },
            {
              internalType: "uint16[]",
              name: "_countries",
              type: "uint16[]",
            },
          ],
          name: "batchRegisterIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "contains",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "deleteIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
          ],
          name: "getRoleAdmin",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "grantRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "hasRole",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "identity",
          outputs: [
            {
              internalType: "contract IIdentity",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "identityStorage",
          outputs: [
            {
              internalType: "contract IIdentityRegistryStorage",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "investorCountry",
          outputs: [
            {
              internalType: "uint16",
              name: "",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "isVerified",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "issuersRegistry",
          outputs: [
            {
              internalType: "contract IClaimIssuersRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "_country",
              type: "uint16",
            },
          ],
          name: "registerIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "renounceRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "revokeRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuersRegistry",
              name: "_claimIssuersRegistry",
              type: "address",
            },
          ],
          name: "setClaimIssuersRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimTopicsRegistry",
              name: "_claimTopicsRegistry",
              type: "address",
            },
          ],
          name: "setClaimTopicsRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IIdentityRegistryStorage",
              name: "_identityRegistryStorage",
              type: "address",
            },
          ],
          name: "setIdentityRegistryStorage",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "topicsRegistry",
          outputs: [
            {
              internalType: "contract IClaimTopicsRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "_country",
              type: "uint16",
            },
          ],
          name: "updateCountry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
          ],
          name: "updateIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        batchRegisterIdentity:
          "contracts/registry/interface/IIdentityRegistry.sol",
        contains: "contracts/registry/interface/IIdentityRegistry.sol",
        deleteIdentity: "contracts/registry/interface/IIdentityRegistry.sol",
        identity: "contracts/registry/interface/IIdentityRegistry.sol",
        identityStorage: "contracts/registry/interface/IIdentityRegistry.sol",
        investorCountry: "contracts/registry/interface/IIdentityRegistry.sol",
        isVerified: "contracts/registry/interface/IIdentityRegistry.sol",
        issuersRegistry: "contracts/registry/interface/IIdentityRegistry.sol",
        registerIdentity: "contracts/registry/interface/IIdentityRegistry.sol",
        setClaimIssuersRegistry:
          "contracts/registry/interface/IIdentityRegistry.sol",
        setClaimTopicsRegistry:
          "contracts/registry/interface/IIdentityRegistry.sol",
        setIdentityRegistryStorage:
          "contracts/registry/interface/IIdentityRegistry.sol",
        topicsRegistry: "contracts/registry/interface/IIdentityRegistry.sol",
        updateCountry: "contracts/registry/interface/IIdentityRegistry.sol",
        updateIdentity: "contracts/registry/interface/IIdentityRegistry.sol",
        DEFAULT_ADMIN_ROLE: "@openzeppelin/contracts/access/AccessControl.sol",
        getRoleAdmin: "@openzeppelin/contracts/access/AccessControl.sol",
        grantRole: "@openzeppelin/contracts/access/AccessControl.sol",
        hasRole: "@openzeppelin/contracts/access/AccessControl.sol",
        renounceRole: "@openzeppelin/contracts/access/AccessControl.sol",
        revokeRole: "@openzeppelin/contracts/access/AccessControl.sol",
        supportsInterface: "@openzeppelin/contracts/access/AccessControl.sol",
      },
    },
    IdentityRegistryStorage: {
      address: "0xad203b3144f8c09a20532957174fc0366291643c",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint16",
              name: "country",
              type: "uint16",
            },
          ],
          name: "CountryModified",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "oldIdentity",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "newIdentity",
              type: "address",
            },
          ],
          name: "IdentityModified",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "identityRegistry",
              type: "address",
            },
          ],
          name: "IdentityRegistryBound",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "identityRegistry",
              type: "address",
            },
          ],
          name: "IdentityRegistryUnbound",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "identity",
              type: "address",
            },
          ],
          name: "IdentityStored",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "identity",
              type: "address",
            },
          ],
          name: "IdentityUnstored",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "previousAdminRole",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "newAdminRole",
              type: "bytes32",
            },
          ],
          name: "RoleAdminChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RoleGranted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RoleRevoked",
          type: "event",
        },
        {
          inputs: [],
          name: "AGENT_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DEFAULT_ADMIN_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "OWNER_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "_country",
              type: "uint16",
            },
          ],
          name: "addIdentityToStorage",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
          ],
          name: "bindIdentityRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
          ],
          name: "getRoleAdmin",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "grantRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "hasRole",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "linkedIdentityRegistries",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
          ],
          name: "modifyStoredIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "_country",
              type: "uint16",
            },
          ],
          name: "modifyStoredInvestorCountry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "removeIdentityFromStorage",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "renounceRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "revokeRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "storedIdentity",
          outputs: [
            {
              internalType: "contract IIdentity",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "storedInvestorCountry",
          outputs: [
            {
              internalType: "uint16",
              name: "",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
          ],
          name: "unbindIdentityRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        addIdentityToStorage:
          "contracts/registry/interface/IIdentityRegistryStorage.sol",
        bindIdentityRegistry:
          "contracts/registry/interface/IIdentityRegistryStorage.sol",
        linkedIdentityRegistries:
          "contracts/registry/interface/IIdentityRegistryStorage.sol",
        modifyStoredIdentity:
          "contracts/registry/interface/IIdentityRegistryStorage.sol",
        modifyStoredInvestorCountry:
          "contracts/registry/interface/IIdentityRegistryStorage.sol",
        removeIdentityFromStorage:
          "contracts/registry/interface/IIdentityRegistryStorage.sol",
        storedIdentity:
          "contracts/registry/interface/IIdentityRegistryStorage.sol",
        storedInvestorCountry:
          "contracts/registry/interface/IIdentityRegistryStorage.sol",
        unbindIdentityRegistry:
          "contracts/registry/interface/IIdentityRegistryStorage.sol",
        DEFAULT_ADMIN_ROLE: "@openzeppelin/contracts/access/AccessControl.sol",
        getRoleAdmin: "@openzeppelin/contracts/access/AccessControl.sol",
        grantRole: "@openzeppelin/contracts/access/AccessControl.sol",
        hasRole: "@openzeppelin/contracts/access/AccessControl.sol",
        renounceRole: "@openzeppelin/contracts/access/AccessControl.sol",
        revokeRole: "@openzeppelin/contracts/access/AccessControl.sol",
        supportsInterface: "@openzeppelin/contracts/access/AccessControl.sol",
      },
    },
    Token: {
      address: "0x24EcC5E6EaA700368B8FAC259d3fBD045f695A08",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "identityRegistry_",
              type: "address",
            },
            {
              internalType: "address",
              name: "compliance_",
              type: "address",
            },
            {
              internalType: "string",
              name: "name_",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol_",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "decimals_",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "onchainID_",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bool",
              name: "_isFrozen",
              type: "bool",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "AddressFrozen",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_compliance",
              type: "address",
            },
          ],
          name: "ComplianceAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
          ],
          name: "IdentityRegistryAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Paused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_lostWallet",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_newWallet",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_investorOnchainID",
              type: "address",
            },
          ],
          name: "RecoverySuccess",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "previousAdminRole",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "newAdminRole",
              type: "bytes32",
            },
          ],
          name: "RoleAdminChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RoleGranted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RoleRevoked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "TokensFrozen",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "TokensUnfrozen",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Unpaused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_newOnchainID",
              type: "address",
            },
          ],
          name: "UpdatedOnchainID",
          type: "event",
        },
        {
          inputs: [],
          name: "AGENT_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DEFAULT_ADMIN_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "OWNER_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "accounts",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "amounts",
              type: "uint256[]",
            },
          ],
          name: "batchBurn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "fromList",
              type: "address[]",
            },
            {
              internalType: "address[]",
              name: "toList",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "amounts",
              type: "uint256[]",
            },
          ],
          name: "batchForcedTransfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "accounts",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "amounts",
              type: "uint256[]",
            },
          ],
          name: "batchFreezePartialTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "toList",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "amounts",
              type: "uint256[]",
            },
          ],
          name: "batchMint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "accounts",
              type: "address[]",
            },
            {
              internalType: "bool[]",
              name: "freeze",
              type: "bool[]",
            },
          ],
          name: "batchSetAddressFrozen",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "toList",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "amounts",
              type: "uint256[]",
            },
          ],
          name: "batchTransfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "fromList",
              type: "address[]",
            },
            {
              internalType: "address[]",
              name: "toList",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "amounts",
              type: "uint256[]",
            },
          ],
          name: "batchTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "accounts",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "amounts",
              type: "uint256[]",
            },
          ],
          name: "batchUnfreezePartialTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "compliance",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "forcedTransfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "freezePartialTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getFrozenTokens",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
          ],
          name: "getRoleAdmin",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "grantRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "hasRole",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "identityRegistry",
          outputs: [
            {
              internalType: "contract IIdentityRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "isFrozen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "onchainID",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "paused",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "lostWallet",
              type: "address",
            },
            {
              internalType: "address",
              name: "newWallet",
              type: "address",
            },
            {
              internalType: "address",
              name: "investorOnchainID",
              type: "address",
            },
          ],
          name: "recoveryAddress",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "renounceRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "revokeRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "bool",
              name: "freeze",
              type: "bool",
            },
          ],
          name: "setAddressFrozen",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newCompliance",
              type: "address",
            },
          ],
          name: "setCompliance",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newIdentityRegistry",
              type: "address",
            },
          ],
          name: "setIdentityRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "onchainID_",
              type: "address",
            },
          ],
          name: "setOnchainID",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "unfreezePartialTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "unpause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "version",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {
        allowance: "contracts/token/IToken.sol",
        approve: "contracts/token/IToken.sol",
        balanceOf: "contracts/token/IToken.sol",
        batchBurn: "contracts/token/IToken.sol",
        batchForcedTransfer: "contracts/token/IToken.sol",
        batchFreezePartialTokens: "contracts/token/IToken.sol",
        batchMint: "contracts/token/IToken.sol",
        batchSetAddressFrozen: "contracts/token/IToken.sol",
        batchTransfer: "contracts/token/IToken.sol",
        batchUnfreezePartialTokens: "contracts/token/IToken.sol",
        burn: "contracts/token/IToken.sol",
        compliance: "contracts/token/IToken.sol",
        decimals: "contracts/token/IToken.sol",
        forcedTransfer: "contracts/token/IToken.sol",
        freezePartialTokens: "contracts/token/IToken.sol",
        getFrozenTokens: "contracts/token/IToken.sol",
        identityRegistry: "contracts/token/IToken.sol",
        isFrozen: "contracts/token/IToken.sol",
        mint: "contracts/token/IToken.sol",
        name: "contracts/token/IToken.sol",
        onchainID: "contracts/token/IToken.sol",
        pause: "contracts/token/IToken.sol",
        recoveryAddress: "contracts/token/IToken.sol",
        setAddressFrozen: "contracts/token/IToken.sol",
        setCompliance: "contracts/token/IToken.sol",
        setIdentityRegistry: "contracts/token/IToken.sol",
        setOnchainID: "contracts/token/IToken.sol",
        symbol: "contracts/token/IToken.sol",
        totalSupply: "contracts/token/IToken.sol",
        transfer: "contracts/token/IToken.sol",
        transferFrom: "contracts/token/IToken.sol",
        unfreezePartialTokens: "contracts/token/IToken.sol",
        unpause: "contracts/token/IToken.sol",
        version: "contracts/token/IToken.sol",
        DEFAULT_ADMIN_ROLE: "@openzeppelin/contracts/access/AccessControl.sol",
        getRoleAdmin: "@openzeppelin/contracts/access/AccessControl.sol",
        grantRole: "@openzeppelin/contracts/access/AccessControl.sol",
        hasRole: "@openzeppelin/contracts/access/AccessControl.sol",
        renounceRole: "@openzeppelin/contracts/access/AccessControl.sol",
        revokeRole: "@openzeppelin/contracts/access/AccessControl.sol",
        supportsInterface: "@openzeppelin/contracts/access/AccessControl.sol",
        paused: "@openzeppelin/contracts/security/Pausable.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
